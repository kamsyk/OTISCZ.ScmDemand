//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OTISCZ.ScmDemand.UI.WcfScmDemand {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfScmDemand.IScmDemand")]
    public interface IScmDemand {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUserData", ReplyAction="http://tempuri.org/IScmDemand/GetUserDataResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(OTISCZ.ScmDemand.Model.ExtendedModel.ScmUserExtend))]
        OTISCZ.ScmDemand.Model.ScmUser GetUserData(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUserData", ReplyAction="http://tempuri.org/IScmDemand/GetUserDataResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ScmUser> GetUserDataAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUserMail", ReplyAction="http://tempuri.org/IScmDemand/GetUserMailResponse")]
        string GetUserMail(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUserMail", ReplyAction="http://tempuri.org/IScmDemand/GetUserMailResponse")]
        System.Threading.Tasks.Task<string> GetUserMailAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUserName", ReplyAction="http://tempuri.org/IScmDemand/GetUserNameResponse")]
        string GetUserName(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUserName", ReplyAction="http://tempuri.org/IScmDemand/GetUserNameResponse")]
        System.Threading.Tasks.Task<string> GetUserNameAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetUserCulture", ReplyAction="http://tempuri.org/IScmDemand/SetUserCultureResponse")]
        void SetUserCulture(int userId, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetUserCulture", ReplyAction="http://tempuri.org/IScmDemand/SetUserCultureResponse")]
        System.Threading.Tasks.Task SetUserCultureAsync(int userId, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetScmSetting", ReplyAction="http://tempuri.org/IScmDemand/GetScmSettingResponse")]
        OTISCZ.ScmDemand.Model.ScmSetting GetScmSetting();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetScmSetting", ReplyAction="http://tempuri.org/IScmDemand/GetScmSettingResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ScmSetting> GetScmSettingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetImportFolder", ReplyAction="http://tempuri.org/IScmDemand/SetImportFolderResponse")]
        void SetImportFolder(string folder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetImportFolder", ReplyAction="http://tempuri.org/IScmDemand/SetImportFolderResponse")]
        System.Threading.Tasks.Task SetImportFolderAsync(string folder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/ImportNomenclature", ReplyAction="http://tempuri.org/IScmDemand/ImportNomenclatureResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureDetailExtend))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(OTISCZ.ScmDemand.Model.ExtendedModel.ScmUserExtend))]
        int ImportNomenclature(OTISCZ.ScmDemand.Model.Nomenclature lineNomenclature, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/ImportNomenclature", ReplyAction="http://tempuri.org/IScmDemand/ImportNomenclatureResponse")]
        System.Threading.Tasks.Task<int> ImportNomenclatureAsync(OTISCZ.ScmDemand.Model.Nomenclature lineNomenclature, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUnits", ReplyAction="http://tempuri.org/IScmDemand/GetUnitsResponse")]
        OTISCZ.ScmDemand.Model.Unit[] GetUnits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetUnits", ReplyAction="http://tempuri.org/IScmDemand/GetUnitsResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Unit[]> GetUnitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetMaterialGroups", ReplyAction="http://tempuri.org/IScmDemand/GetMaterialGroupsResponse")]
        OTISCZ.ScmDemand.Model.Material_Group[] GetMaterialGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetMaterialGroups", ReplyAction="http://tempuri.org/IScmDemand/GetMaterialGroupsResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Material_Group[]> GetMaterialGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclatures", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclaturesResponse")]
        OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesResponse GetNomenclatures(OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclatures", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclaturesResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesResponse> GetNomenclaturesAsync(OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclatureById", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclatureByIdResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureDetailExtend GetNomenclatureById(int nomenclatureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclatureById", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclatureByIdResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureDetailExtend> GetNomenclatureByIdAsync(int nomenclatureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveNomenclature", ReplyAction="http://tempuri.org/IScmDemand/SaveNomenclatureResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureDetailExtend))]
        void SaveNomenclature(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend nomenclature, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveNomenclature", ReplyAction="http://tempuri.org/IScmDemand/SaveNomenclatureResponse")]
        System.Threading.Tasks.Task SaveNomenclatureAsync(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend nomenclature, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclaturesReport", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclaturesReportResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend[] GetNomenclaturesReport(string filter, string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclaturesReport", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclaturesReportResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend[]> GetNomenclaturesReportAsync(string filter, string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSupplierBySupplierId", ReplyAction="http://tempuri.org/IScmDemand/GetSupplierBySupplierIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(OTISCZ.ScmDemand.Model.ExtendedModel.ScmUserExtend))]
        OTISCZ.ScmDemand.Model.Supplier GetSupplierBySupplierId(string supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSupplierBySupplierId", ReplyAction="http://tempuri.org/IScmDemand/GetSupplierBySupplierIdResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Supplier> GetSupplierBySupplierIdAsync(string supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeactiveSuppliers", ReplyAction="http://tempuri.org/IScmDemand/DeactiveSuppliersResponse")]
        void DeactiveSuppliers(int[] htActivesuppliersIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeactiveSuppliers", ReplyAction="http://tempuri.org/IScmDemand/DeactiveSuppliersResponse")]
        System.Threading.Tasks.Task DeactiveSuppliersAsync(int[] htActivesuppliersIds, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSuppliers", ReplyAction="http://tempuri.org/IScmDemand/GetSuppliersResponse")]
        OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersResponse GetSuppliers(OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSuppliers", ReplyAction="http://tempuri.org/IScmDemand/GetSuppliersResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersResponse> GetSuppliersAsync(OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveDemand", ReplyAction="http://tempuri.org/IScmDemand/SaveDemandResponse")]
        int SaveDemand(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveDemand", ReplyAction="http://tempuri.org/IScmDemand/SaveDemandResponse")]
        System.Threading.Tasks.Task<int> SaveDemandAsync(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveDemandWasSent", ReplyAction="http://tempuri.org/IScmDemand/SaveDemandWasSentResponse")]
        int SaveDemandWasSent(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveDemandWasSent", ReplyAction="http://tempuri.org/IScmDemand/SaveDemandWasSentResponse")]
        System.Threading.Tasks.Task<int> SaveDemandWasSentAsync(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNewDemandRequestNr", ReplyAction="http://tempuri.org/IScmDemand/GetNewDemandRequestNrResponse")]
        string GetNewDemandRequestNr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNewDemandRequestNr", ReplyAction="http://tempuri.org/IScmDemand/GetNewDemandRequestNrResponse")]
        System.Threading.Tasks.Task<string> GetNewDemandRequestNrAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemands", ReplyAction="http://tempuri.org/IScmDemand/GetDemandsResponse")]
        OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsResponse GetDemands(OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemands", ReplyAction="http://tempuri.org/IScmDemand/GetDemandsResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsResponse> GetDemandsAsync(OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandsReport", ReplyAction="http://tempuri.org/IScmDemand/GetDemandsReportResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend[] GetDemandsReport(OTISCZ.ScmDemand.Model.Repository.WcfFilterField[] filterFields, string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandsReport", ReplyAction="http://tempuri.org/IScmDemand/GetDemandsReportResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend[]> GetDemandsReportAsync(OTISCZ.ScmDemand.Model.Repository.WcfFilterField[] filterFields, string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetPendingNomenclaturesNumber", ReplyAction="http://tempuri.org/IScmDemand/GetPendingNomenclaturesNumberResponse")]
        int GetPendingNomenclaturesNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetPendingNomenclaturesNumber", ReplyAction="http://tempuri.org/IScmDemand/GetPendingNomenclaturesNumberResponse")]
        System.Threading.Tasks.Task<int> GetPendingNomenclaturesNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetPendingDemandsNumber", ReplyAction="http://tempuri.org/IScmDemand/GetPendingDemandsNumberResponse")]
        int GetPendingDemandsNumber(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetPendingDemandsNumber", ReplyAction="http://tempuri.org/IScmDemand/GetPendingDemandsNumberResponse")]
        System.Threading.Tasks.Task<int> GetPendingDemandsNumberAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandDetail", ReplyAction="http://tempuri.org/IScmDemand/GetDemandDetailResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend GetDemandDetail(int demandId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandDetail", ReplyAction="http://tempuri.org/IScmDemand/GetDemandDetailResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend> GetDemandDetailAsync(int demandId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetAttachmentContent", ReplyAction="http://tempuri.org/IScmDemand/GetAttachmentContentResponse")]
        byte[] GetAttachmentContent(int attId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetAttachmentContent", ReplyAction="http://tempuri.org/IScmDemand/GetAttachmentContentResponse")]
        System.Threading.Tasks.Task<byte[]> GetAttachmentContentAsync(int attId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/AddAttachment", ReplyAction="http://tempuri.org/IScmDemand/AddAttachmentResponse")]
        int AddAttachment(int demandId, string fileName, byte[] fileContent, byte[] fileIcon, int attType, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/AddAttachment", ReplyAction="http://tempuri.org/IScmDemand/AddAttachmentResponse")]
        System.Threading.Tasks.Task<int> AddAttachmentAsync(int demandId, string fileName, byte[] fileContent, byte[] fileIcon, int attType, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeleteAttachment", ReplyAction="http://tempuri.org/IScmDemand/DeleteAttachmentResponse")]
        void DeleteAttachment(int demandId, int attachmentId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeleteAttachment", ReplyAction="http://tempuri.org/IScmDemand/DeleteAttachmentResponse")]
        System.Threading.Tasks.Task DeleteAttachmentAsync(int demandId, int attachmentId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetActiveAppMen", ReplyAction="http://tempuri.org/IScmDemand/GetActiveAppMenResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.ScmUserExtend[] GetActiveAppMen();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetActiveAppMen", ReplyAction="http://tempuri.org/IScmDemand/GetActiveAppMenResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.ScmUserExtend[]> GetActiveAppMenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetActiveCurrencies", ReplyAction="http://tempuri.org/IScmDemand/GetActiveCurrenciesResponse")]
        OTISCZ.ScmDemand.Model.Currency[] GetActiveCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetActiveCurrencies", ReplyAction="http://tempuri.org/IScmDemand/GetActiveCurrenciesResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Currency[]> GetActiveCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveDemandNomenclature", ReplyAction="http://tempuri.org/IScmDemand/SaveDemandNomenclatureResponse")]
        void SaveDemandNomenclature(OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend demNom, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveDemandNomenclature", ReplyAction="http://tempuri.org/IScmDemand/SaveDemandNomenclatureResponse")]
        System.Threading.Tasks.Task SaveDemandNomenclatureAsync(OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend demNom, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetMaterialGroupId", ReplyAction="http://tempuri.org/IScmDemand/GetMaterialGroupIdResponse")]
        int GetMaterialGroupId(string materialGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetMaterialGroupId", ReplyAction="http://tempuri.org/IScmDemand/GetMaterialGroupIdResponse")]
        System.Threading.Tasks.Task<int> GetMaterialGroupIdAsync(string materialGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandPreviousStatus", ReplyAction="http://tempuri.org/IScmDemand/GetDemandPreviousStatusResponse")]
        int GetDemandPreviousStatus(int demandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandPreviousStatus", ReplyAction="http://tempuri.org/IScmDemand/GetDemandPreviousStatusResponse")]
        System.Threading.Tasks.Task<int> GetDemandPreviousStatusAsync(int demandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetLastImportDateText", ReplyAction="http://tempuri.org/IScmDemand/GetLastImportDateTextResponse")]
        string GetLastImportDateText();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetLastImportDateText", ReplyAction="http://tempuri.org/IScmDemand/GetLastImportDateTextResponse")]
        System.Threading.Tasks.Task<string> GetLastImportDateTextAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetLastImportDate", ReplyAction="http://tempuri.org/IScmDemand/SetLastImportDateResponse")]
        void SetLastImportDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetLastImportDate", ReplyAction="http://tempuri.org/IScmDemand/SetLastImportDateResponse")]
        System.Threading.Tasks.Task SetLastImportDateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSupplierById", ReplyAction="http://tempuri.org/IScmDemand/GetSupplierByIdResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend GetSupplierById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSupplierById", ReplyAction="http://tempuri.org/IScmDemand/GetSupplierByIdResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend> GetSupplierByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveSupplier", ReplyAction="http://tempuri.org/IScmDemand/SaveSupplierResponse")]
        int SaveSupplier(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend supplier, int userId, bool isContactUpdate, bool isImport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveSupplier", ReplyAction="http://tempuri.org/IScmDemand/SaveSupplierResponse")]
        System.Threading.Tasks.Task<int> SaveSupplierAsync(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend supplier, int userId, bool isContactUpdate, bool isImport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveSupplierContact", ReplyAction="http://tempuri.org/IScmDemand/SaveSupplierContactResponse")]
        int SaveSupplierContact(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierContactExtended supplierContactExtended, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveSupplierContact", ReplyAction="http://tempuri.org/IScmDemand/SaveSupplierContactResponse")]
        System.Threading.Tasks.Task<int> SaveSupplierContactAsync(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierContactExtended supplierContactExtended, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveImportInfo", ReplyAction="http://tempuri.org/IScmDemand/SaveImportInfoResponse")]
        void SaveImportInfo(string fileName, System.DateTime lastModifDate, bool isError, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveImportInfo", ReplyAction="http://tempuri.org/IScmDemand/SaveImportInfoResponse")]
        System.Threading.Tasks.Task SaveImportInfoAsync(string fileName, System.DateTime lastModifDate, bool isError, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/IsFileLoaded", ReplyAction="http://tempuri.org/IScmDemand/IsFileLoadedResponse")]
        bool IsFileLoaded(string fileName, System.DateTime lastModifDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/IsFileLoaded", ReplyAction="http://tempuri.org/IScmDemand/IsFileLoadedResponse")]
        System.Threading.Tasks.Task<bool> IsFileLoadedAsync(string fileName, System.DateTime lastModifDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSuppliersReport", ReplyAction="http://tempuri.org/IScmDemand/GetSuppliersReportResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend[] GetSuppliersReport(string filter, string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetSuppliersReport", ReplyAction="http://tempuri.org/IScmDemand/GetSuppliersReportResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend[]> GetSuppliersReportAsync(string filter, string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveNomenclaturesStatus", ReplyAction="http://tempuri.org/IScmDemand/SaveNomenclaturesStatusResponse")]
        void SaveNomenclaturesStatus(int demandId, int[] nomIds, int[] statusesId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SaveNomenclaturesStatus", ReplyAction="http://tempuri.org/IScmDemand/SaveNomenclaturesStatusResponse")]
        System.Threading.Tasks.Task SaveNomenclaturesStatusAsync(int demandId, int[] nomIds, int[] statusesId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/RemoveDemandNomenclature", ReplyAction="http://tempuri.org/IScmDemand/RemoveDemandNomenclatureResponse")]
        void RemoveDemandNomenclature(int demandId, int nomenclatureId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/RemoveDemandNomenclature", ReplyAction="http://tempuri.org/IScmDemand/RemoveDemandNomenclatureResponse")]
        System.Threading.Tasks.Task RemoveDemandNomenclatureAsync(int demandId, int nomenclatureId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetPrice", ReplyAction="http://tempuri.org/IScmDemand/SetPriceResponse")]
        bool SetPrice(string strNomenclature, decimal dPrice, int userId, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetPrice", ReplyAction="http://tempuri.org/IScmDemand/SetPriceResponse")]
        System.Threading.Tasks.Task<bool> SetPriceAsync(string strNomenclature, decimal dPrice, int userId, int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/AddRemark", ReplyAction="http://tempuri.org/IScmDemand/AddRemarkResponse")]
        void AddRemark(int demandId, int demandVersion, int authorId, string strRemark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/AddRemark", ReplyAction="http://tempuri.org/IScmDemand/AddRemarkResponse")]
        System.Threading.Tasks.Task AddRemarkAsync(int demandId, int demandVersion, int authorId, string strRemark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetRemarks", ReplyAction="http://tempuri.org/IScmDemand/GetRemarksResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.RemarkExtend[] GetRemarks(int demandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetRemarks", ReplyAction="http://tempuri.org/IScmDemand/GetRemarksResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.RemarkExtend[]> GetRemarksAsync(int demandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandNomHistory", ReplyAction="http://tempuri.org/IScmDemand/GetDemandNomHistoryResponse")]
        OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend[] GetDemandNomHistory(int demandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandNomHistory", ReplyAction="http://tempuri.org/IScmDemand/GetDemandNomHistoryResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend[]> GetDemandNomHistoryAsync(int demandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandNomPrevStatus", ReplyAction="http://tempuri.org/IScmDemand/GetDemandNomPrevStatusResponse")]
        int GetDemandNomPrevStatus(int demandId, int nomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandNomPrevStatus", ReplyAction="http://tempuri.org/IScmDemand/GetDemandNomPrevStatusResponse")]
        System.Threading.Tasks.Task<int> GetDemandNomPrevStatusAsync(int demandId, int nomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandStatuses", ReplyAction="http://tempuri.org/IScmDemand/GetDemandStatusesResponse")]
        OTISCZ.ScmDemand.Model.Demand_Status[] GetDemandStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetDemandStatuses", ReplyAction="http://tempuri.org/IScmDemand/GetDemandStatusesResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Demand_Status[]> GetDemandStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclatureSources", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclatureSourcesResponse")]
        OTISCZ.ScmDemand.Model.Nomenclature_Source[] GetNomenclatureSources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/GetNomenclatureSources", ReplyAction="http://tempuri.org/IScmDemand/GetNomenclatureSourcesResponse")]
        System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Nomenclature_Source[]> GetNomenclatureSourcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeactivateNomenclature", ReplyAction="http://tempuri.org/IScmDemand/DeactivateNomenclatureResponse")]
        void DeactivateNomenclature(string strNomKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeactivateNomenclature", ReplyAction="http://tempuri.org/IScmDemand/DeactivateNomenclatureResponse")]
        System.Threading.Tasks.Task DeactivateNomenclatureAsync(string strNomKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetPlNakNavrh", ReplyAction="http://tempuri.org/IScmDemand/SetPlNakNavrhResponse")]
        void SetPlNakNavrh(string strNomKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/SetPlNakNavrh", ReplyAction="http://tempuri.org/IScmDemand/SetPlNakNavrhResponse")]
        System.Threading.Tasks.Task SetPlNakNavrhAsync(string strNomKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeleteNotUsedCustomNoms", ReplyAction="http://tempuri.org/IScmDemand/DeleteNotUsedCustomNomsResponse")]
        void DeleteNotUsedCustomNoms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScmDemand/DeleteNotUsedCustomNoms", ReplyAction="http://tempuri.org/IScmDemand/DeleteNotUsedCustomNomsResponse")]
        System.Threading.Tasks.Task DeleteNotUsedCustomNomsAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNomenclatures", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNomenclaturesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sort;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int pageNr;
        
        public GetNomenclaturesRequest() {
        }
        
        public GetNomenclaturesRequest(string filter, string sort, int pageSize, int pageNr) {
            this.filter = filter;
            this.sort = sort;
            this.pageSize = pageSize;
            this.pageNr = pageNr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNomenclaturesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNomenclaturesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend[] GetNomenclaturesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int rowsCount;
        
        public GetNomenclaturesResponse() {
        }
        
        public GetNomenclaturesResponse(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend[] GetNomenclaturesResult, int rowsCount) {
            this.GetNomenclaturesResult = GetNomenclaturesResult;
            this.rowsCount = rowsCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSuppliers", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSuppliersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sort;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int pageNr;
        
        public GetSuppliersRequest() {
        }
        
        public GetSuppliersRequest(string filter, string sort, int pageSize, int pageNr) {
            this.filter = filter;
            this.sort = sort;
            this.pageSize = pageSize;
            this.pageNr = pageNr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSuppliersResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSuppliersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend[] GetSuppliersResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int rowsCount;
        
        public GetSuppliersResponse() {
        }
        
        public GetSuppliersResponse(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend[] GetSuppliersResult, int rowsCount) {
            this.GetSuppliersResult = GetSuppliersResult;
            this.rowsCount = rowsCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDemands", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDemandsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OTISCZ.ScmDemand.Model.Repository.WcfFilterField[] filterFields;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sort;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int pageNr;
        
        public GetDemandsRequest() {
        }
        
        public GetDemandsRequest(OTISCZ.ScmDemand.Model.Repository.WcfFilterField[] filterFields, string sort, int pageSize, int pageNr) {
            this.filterFields = filterFields;
            this.sort = sort;
            this.pageSize = pageSize;
            this.pageNr = pageNr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDemandsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDemandsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend[] GetDemandsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int rowsCount;
        
        public GetDemandsResponse() {
        }
        
        public GetDemandsResponse(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend[] GetDemandsResult, int rowsCount) {
            this.GetDemandsResult = GetDemandsResult;
            this.rowsCount = rowsCount;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScmDemandChannel : OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScmDemandClient : System.ServiceModel.ClientBase<OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand>, OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand {
        
        public ScmDemandClient() {
        }
        
        public ScmDemandClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScmDemandClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScmDemandClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScmDemandClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OTISCZ.ScmDemand.Model.ScmUser GetUserData(string userName) {
            return base.Channel.GetUserData(userName);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ScmUser> GetUserDataAsync(string userName) {
            return base.Channel.GetUserDataAsync(userName);
        }
        
        public string GetUserMail(int userId) {
            return base.Channel.GetUserMail(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserMailAsync(int userId) {
            return base.Channel.GetUserMailAsync(userId);
        }
        
        public string GetUserName(int userId) {
            return base.Channel.GetUserName(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserNameAsync(int userId) {
            return base.Channel.GetUserNameAsync(userId);
        }
        
        public void SetUserCulture(int userId, string culture) {
            base.Channel.SetUserCulture(userId, culture);
        }
        
        public System.Threading.Tasks.Task SetUserCultureAsync(int userId, string culture) {
            return base.Channel.SetUserCultureAsync(userId, culture);
        }
        
        public OTISCZ.ScmDemand.Model.ScmSetting GetScmSetting() {
            return base.Channel.GetScmSetting();
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ScmSetting> GetScmSettingAsync() {
            return base.Channel.GetScmSettingAsync();
        }
        
        public void SetImportFolder(string folder) {
            base.Channel.SetImportFolder(folder);
        }
        
        public System.Threading.Tasks.Task SetImportFolderAsync(string folder) {
            return base.Channel.SetImportFolderAsync(folder);
        }
        
        public int ImportNomenclature(OTISCZ.ScmDemand.Model.Nomenclature lineNomenclature, int userId) {
            return base.Channel.ImportNomenclature(lineNomenclature, userId);
        }
        
        public System.Threading.Tasks.Task<int> ImportNomenclatureAsync(OTISCZ.ScmDemand.Model.Nomenclature lineNomenclature, int userId) {
            return base.Channel.ImportNomenclatureAsync(lineNomenclature, userId);
        }
        
        public OTISCZ.ScmDemand.Model.Unit[] GetUnits() {
            return base.Channel.GetUnits();
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Unit[]> GetUnitsAsync() {
            return base.Channel.GetUnitsAsync();
        }
        
        public OTISCZ.ScmDemand.Model.Material_Group[] GetMaterialGroups() {
            return base.Channel.GetMaterialGroups();
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Material_Group[]> GetMaterialGroupsAsync() {
            return base.Channel.GetMaterialGroupsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesResponse OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand.GetNomenclatures(OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesRequest request) {
            return base.Channel.GetNomenclatures(request);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend[] GetNomenclatures(string filter, string sort, int pageSize, int pageNr, out int rowsCount) {
            OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesRequest inValue = new OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesRequest();
            inValue.filter = filter;
            inValue.sort = sort;
            inValue.pageSize = pageSize;
            inValue.pageNr = pageNr;
            OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesResponse retVal = ((OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand)(this)).GetNomenclatures(inValue);
            rowsCount = retVal.rowsCount;
            return retVal.GetNomenclaturesResult;
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesResponse> GetNomenclaturesAsync(OTISCZ.ScmDemand.UI.WcfScmDemand.GetNomenclaturesRequest request) {
            return base.Channel.GetNomenclaturesAsync(request);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureDetailExtend GetNomenclatureById(int nomenclatureId) {
            return base.Channel.GetNomenclatureById(nomenclatureId);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureDetailExtend> GetNomenclatureByIdAsync(int nomenclatureId) {
            return base.Channel.GetNomenclatureByIdAsync(nomenclatureId);
        }
        
        public void SaveNomenclature(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend nomenclature, int userId) {
            base.Channel.SaveNomenclature(nomenclature, userId);
        }
        
        public System.Threading.Tasks.Task SaveNomenclatureAsync(OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend nomenclature, int userId) {
            return base.Channel.SaveNomenclatureAsync(nomenclature, userId);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend[] GetNomenclaturesReport(string filter, string sort) {
            return base.Channel.GetNomenclaturesReport(filter, sort);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.NomenclatureExtend[]> GetNomenclaturesReportAsync(string filter, string sort) {
            return base.Channel.GetNomenclaturesReportAsync(filter, sort);
        }
        
        public OTISCZ.ScmDemand.Model.Supplier GetSupplierBySupplierId(string supplierId) {
            return base.Channel.GetSupplierBySupplierId(supplierId);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Supplier> GetSupplierBySupplierIdAsync(string supplierId) {
            return base.Channel.GetSupplierBySupplierIdAsync(supplierId);
        }
        
        public void DeactiveSuppliers(int[] htActivesuppliersIds, int userId) {
            base.Channel.DeactiveSuppliers(htActivesuppliersIds, userId);
        }
        
        public System.Threading.Tasks.Task DeactiveSuppliersAsync(int[] htActivesuppliersIds, int userId) {
            return base.Channel.DeactiveSuppliersAsync(htActivesuppliersIds, userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersResponse OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand.GetSuppliers(OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersRequest request) {
            return base.Channel.GetSuppliers(request);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend[] GetSuppliers(string filter, string sort, int pageSize, int pageNr, out int rowsCount) {
            OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersRequest inValue = new OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersRequest();
            inValue.filter = filter;
            inValue.sort = sort;
            inValue.pageSize = pageSize;
            inValue.pageNr = pageNr;
            OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersResponse retVal = ((OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand)(this)).GetSuppliers(inValue);
            rowsCount = retVal.rowsCount;
            return retVal.GetSuppliersResult;
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersResponse> GetSuppliersAsync(OTISCZ.ScmDemand.UI.WcfScmDemand.GetSuppliersRequest request) {
            return base.Channel.GetSuppliersAsync(request);
        }
        
        public int SaveDemand(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId) {
            return base.Channel.SaveDemand(demand, userId);
        }
        
        public System.Threading.Tasks.Task<int> SaveDemandAsync(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId) {
            return base.Channel.SaveDemandAsync(demand, userId);
        }
        
        public int SaveDemandWasSent(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId) {
            return base.Channel.SaveDemandWasSent(demand, userId);
        }
        
        public System.Threading.Tasks.Task<int> SaveDemandWasSentAsync(OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend demand, int userId) {
            return base.Channel.SaveDemandWasSentAsync(demand, userId);
        }
        
        public string GetNewDemandRequestNr() {
            return base.Channel.GetNewDemandRequestNr();
        }
        
        public System.Threading.Tasks.Task<string> GetNewDemandRequestNrAsync() {
            return base.Channel.GetNewDemandRequestNrAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsResponse OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand.GetDemands(OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsRequest request) {
            return base.Channel.GetDemands(request);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend[] GetDemands(OTISCZ.ScmDemand.Model.Repository.WcfFilterField[] filterFields, string sort, int pageSize, int pageNr, out int rowsCount) {
            OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsRequest inValue = new OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsRequest();
            inValue.filterFields = filterFields;
            inValue.sort = sort;
            inValue.pageSize = pageSize;
            inValue.pageNr = pageNr;
            OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsResponse retVal = ((OTISCZ.ScmDemand.UI.WcfScmDemand.IScmDemand)(this)).GetDemands(inValue);
            rowsCount = retVal.rowsCount;
            return retVal.GetDemandsResult;
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsResponse> GetDemandsAsync(OTISCZ.ScmDemand.UI.WcfScmDemand.GetDemandsRequest request) {
            return base.Channel.GetDemandsAsync(request);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend[] GetDemandsReport(OTISCZ.ScmDemand.Model.Repository.WcfFilterField[] filterFields, string sort) {
            return base.Channel.GetDemandsReport(filterFields, sort);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend[]> GetDemandsReportAsync(OTISCZ.ScmDemand.Model.Repository.WcfFilterField[] filterFields, string sort) {
            return base.Channel.GetDemandsReportAsync(filterFields, sort);
        }
        
        public int GetPendingNomenclaturesNumber() {
            return base.Channel.GetPendingNomenclaturesNumber();
        }
        
        public System.Threading.Tasks.Task<int> GetPendingNomenclaturesNumberAsync() {
            return base.Channel.GetPendingNomenclaturesNumberAsync();
        }
        
        public int GetPendingDemandsNumber(int userId) {
            return base.Channel.GetPendingDemandsNumber(userId);
        }
        
        public System.Threading.Tasks.Task<int> GetPendingDemandsNumberAsync(int userId) {
            return base.Channel.GetPendingDemandsNumberAsync(userId);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend GetDemandDetail(int demandId, int userId) {
            return base.Channel.GetDemandDetail(demandId, userId);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.DemandExtend> GetDemandDetailAsync(int demandId, int userId) {
            return base.Channel.GetDemandDetailAsync(demandId, userId);
        }
        
        public byte[] GetAttachmentContent(int attId) {
            return base.Channel.GetAttachmentContent(attId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetAttachmentContentAsync(int attId) {
            return base.Channel.GetAttachmentContentAsync(attId);
        }
        
        public int AddAttachment(int demandId, string fileName, byte[] fileContent, byte[] fileIcon, int attType, int userId) {
            return base.Channel.AddAttachment(demandId, fileName, fileContent, fileIcon, attType, userId);
        }
        
        public System.Threading.Tasks.Task<int> AddAttachmentAsync(int demandId, string fileName, byte[] fileContent, byte[] fileIcon, int attType, int userId) {
            return base.Channel.AddAttachmentAsync(demandId, fileName, fileContent, fileIcon, attType, userId);
        }
        
        public void DeleteAttachment(int demandId, int attachmentId, int userId) {
            base.Channel.DeleteAttachment(demandId, attachmentId, userId);
        }
        
        public System.Threading.Tasks.Task DeleteAttachmentAsync(int demandId, int attachmentId, int userId) {
            return base.Channel.DeleteAttachmentAsync(demandId, attachmentId, userId);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.ScmUserExtend[] GetActiveAppMen() {
            return base.Channel.GetActiveAppMen();
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.ScmUserExtend[]> GetActiveAppMenAsync() {
            return base.Channel.GetActiveAppMenAsync();
        }
        
        public OTISCZ.ScmDemand.Model.Currency[] GetActiveCurrencies() {
            return base.Channel.GetActiveCurrencies();
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Currency[]> GetActiveCurrenciesAsync() {
            return base.Channel.GetActiveCurrenciesAsync();
        }
        
        public void SaveDemandNomenclature(OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend demNom, int userId) {
            base.Channel.SaveDemandNomenclature(demNom, userId);
        }
        
        public System.Threading.Tasks.Task SaveDemandNomenclatureAsync(OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend demNom, int userId) {
            return base.Channel.SaveDemandNomenclatureAsync(demNom, userId);
        }
        
        public int GetMaterialGroupId(string materialGroupName) {
            return base.Channel.GetMaterialGroupId(materialGroupName);
        }
        
        public System.Threading.Tasks.Task<int> GetMaterialGroupIdAsync(string materialGroupName) {
            return base.Channel.GetMaterialGroupIdAsync(materialGroupName);
        }
        
        public int GetDemandPreviousStatus(int demandId) {
            return base.Channel.GetDemandPreviousStatus(demandId);
        }
        
        public System.Threading.Tasks.Task<int> GetDemandPreviousStatusAsync(int demandId) {
            return base.Channel.GetDemandPreviousStatusAsync(demandId);
        }
        
        public string GetLastImportDateText() {
            return base.Channel.GetLastImportDateText();
        }
        
        public System.Threading.Tasks.Task<string> GetLastImportDateTextAsync() {
            return base.Channel.GetLastImportDateTextAsync();
        }
        
        public void SetLastImportDate() {
            base.Channel.SetLastImportDate();
        }
        
        public System.Threading.Tasks.Task SetLastImportDateAsync() {
            return base.Channel.SetLastImportDateAsync();
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend GetSupplierById(int id) {
            return base.Channel.GetSupplierById(id);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend> GetSupplierByIdAsync(int id) {
            return base.Channel.GetSupplierByIdAsync(id);
        }
        
        public int SaveSupplier(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend supplier, int userId, bool isContactUpdate, bool isImport) {
            return base.Channel.SaveSupplier(supplier, userId, isContactUpdate, isImport);
        }
        
        public System.Threading.Tasks.Task<int> SaveSupplierAsync(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend supplier, int userId, bool isContactUpdate, bool isImport) {
            return base.Channel.SaveSupplierAsync(supplier, userId, isContactUpdate, isImport);
        }
        
        public int SaveSupplierContact(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierContactExtended supplierContactExtended, int userId) {
            return base.Channel.SaveSupplierContact(supplierContactExtended, userId);
        }
        
        public System.Threading.Tasks.Task<int> SaveSupplierContactAsync(OTISCZ.ScmDemand.Model.ExtendedModel.SupplierContactExtended supplierContactExtended, int userId) {
            return base.Channel.SaveSupplierContactAsync(supplierContactExtended, userId);
        }
        
        public void SaveImportInfo(string fileName, System.DateTime lastModifDate, bool isError, int userId) {
            base.Channel.SaveImportInfo(fileName, lastModifDate, isError, userId);
        }
        
        public System.Threading.Tasks.Task SaveImportInfoAsync(string fileName, System.DateTime lastModifDate, bool isError, int userId) {
            return base.Channel.SaveImportInfoAsync(fileName, lastModifDate, isError, userId);
        }
        
        public bool IsFileLoaded(string fileName, System.DateTime lastModifDate) {
            return base.Channel.IsFileLoaded(fileName, lastModifDate);
        }
        
        public System.Threading.Tasks.Task<bool> IsFileLoadedAsync(string fileName, System.DateTime lastModifDate) {
            return base.Channel.IsFileLoadedAsync(fileName, lastModifDate);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend[] GetSuppliersReport(string filter, string sort) {
            return base.Channel.GetSuppliersReport(filter, sort);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.SupplierExtend[]> GetSuppliersReportAsync(string filter, string sort) {
            return base.Channel.GetSuppliersReportAsync(filter, sort);
        }
        
        public void SaveNomenclaturesStatus(int demandId, int[] nomIds, int[] statusesId, int userId) {
            base.Channel.SaveNomenclaturesStatus(demandId, nomIds, statusesId, userId);
        }
        
        public System.Threading.Tasks.Task SaveNomenclaturesStatusAsync(int demandId, int[] nomIds, int[] statusesId, int userId) {
            return base.Channel.SaveNomenclaturesStatusAsync(demandId, nomIds, statusesId, userId);
        }
        
        public void RemoveDemandNomenclature(int demandId, int nomenclatureId, int userId) {
            base.Channel.RemoveDemandNomenclature(demandId, nomenclatureId, userId);
        }
        
        public System.Threading.Tasks.Task RemoveDemandNomenclatureAsync(int demandId, int nomenclatureId, int userId) {
            return base.Channel.RemoveDemandNomenclatureAsync(demandId, nomenclatureId, userId);
        }
        
        public bool SetPrice(string strNomenclature, decimal dPrice, int userId, int currencyId) {
            return base.Channel.SetPrice(strNomenclature, dPrice, userId, currencyId);
        }
        
        public System.Threading.Tasks.Task<bool> SetPriceAsync(string strNomenclature, decimal dPrice, int userId, int currencyId) {
            return base.Channel.SetPriceAsync(strNomenclature, dPrice, userId, currencyId);
        }
        
        public void AddRemark(int demandId, int demandVersion, int authorId, string strRemark) {
            base.Channel.AddRemark(demandId, demandVersion, authorId, strRemark);
        }
        
        public System.Threading.Tasks.Task AddRemarkAsync(int demandId, int demandVersion, int authorId, string strRemark) {
            return base.Channel.AddRemarkAsync(demandId, demandVersion, authorId, strRemark);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.RemarkExtend[] GetRemarks(int demandId) {
            return base.Channel.GetRemarks(demandId);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.RemarkExtend[]> GetRemarksAsync(int demandId) {
            return base.Channel.GetRemarksAsync(demandId);
        }
        
        public OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend[] GetDemandNomHistory(int demandId) {
            return base.Channel.GetDemandNomHistory(demandId);
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.ExtendedModel.DemandNomenclatureExtend[]> GetDemandNomHistoryAsync(int demandId) {
            return base.Channel.GetDemandNomHistoryAsync(demandId);
        }
        
        public int GetDemandNomPrevStatus(int demandId, int nomId) {
            return base.Channel.GetDemandNomPrevStatus(demandId, nomId);
        }
        
        public System.Threading.Tasks.Task<int> GetDemandNomPrevStatusAsync(int demandId, int nomId) {
            return base.Channel.GetDemandNomPrevStatusAsync(demandId, nomId);
        }
        
        public OTISCZ.ScmDemand.Model.Demand_Status[] GetDemandStatuses() {
            return base.Channel.GetDemandStatuses();
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Demand_Status[]> GetDemandStatusesAsync() {
            return base.Channel.GetDemandStatusesAsync();
        }
        
        public OTISCZ.ScmDemand.Model.Nomenclature_Source[] GetNomenclatureSources() {
            return base.Channel.GetNomenclatureSources();
        }
        
        public System.Threading.Tasks.Task<OTISCZ.ScmDemand.Model.Nomenclature_Source[]> GetNomenclatureSourcesAsync() {
            return base.Channel.GetNomenclatureSourcesAsync();
        }
        
        public void DeactivateNomenclature(string strNomKey) {
            base.Channel.DeactivateNomenclature(strNomKey);
        }
        
        public System.Threading.Tasks.Task DeactivateNomenclatureAsync(string strNomKey) {
            return base.Channel.DeactivateNomenclatureAsync(strNomKey);
        }
        
        public void SetPlNakNavrh(string strNomKey) {
            base.Channel.SetPlNakNavrh(strNomKey);
        }
        
        public System.Threading.Tasks.Task SetPlNakNavrhAsync(string strNomKey) {
            return base.Channel.SetPlNakNavrhAsync(strNomKey);
        }
        
        public void DeleteNotUsedCustomNoms() {
            base.Channel.DeleteNotUsedCustomNoms();
        }
        
        public System.Threading.Tasks.Task DeleteNotUsedCustomNomsAsync() {
            return base.Channel.DeleteNotUsedCustomNomsAsync();
        }
    }
}
